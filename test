#!/bin/bash

# Delimiter
delimiter="----------------------------------------------------------------"

installDependencies() {
	# Install dependencies for this script
	pacman --noconfirm -S git p7zip wget
}

createUser() {
	# Create an user with a password and groups
	printf "%s\n" "${delimiter}"
	printf "| [+] Create user\n"
	printf "%s\n" "${delimiter}"

	printf "%s\n" "${delimiter}"
	read -p "| [+] Create an username: " username
	# Create user with home directory
	useradd -m "${username}"
	printf "| [+] User \"%s\" created\n" "${username}"
	printf "| [+] Create password for %s\n" "${username}"
	# Create password
	passwd ${username}
	printf "| [+] Password for %s created\n" "${username}"
	read -p "| [+] Select groups to add user ${username} to: " groups
	# Add user to groups specified
	usermod -aG "${groups}" ${username}
	printf "| [+] User %s added to groups: %s\n" "${username}" "${groups}"
	printf "%s\n" "${delimiter}"

	printf "%s\n" "${delimiter}"
	printf "| [+] User %s created\n" "${username}"
	printf "%s\n" "${delimiter}"
}

createDirectories() {
	# Create directories in HOME directory
	directories=(
		/.local/bin/
		/.local/share/fonts/
		Desktop/
		Downloads/
		Videos/Recordings/
		Pictures/Screenshots/
		Music/
		Documents/aur/
		Documents/git/
		Wine/
	)

	printf "%s\n" "${delimiter}"
	printf "| [+] Create directories for user %s\n" "${username}"
	printf "%s\n" "${delimiter}"

	printf "%s\n" "${delimiter}"
	# Loop through directory list
	for dir in "${directories[@]}"; do
		printf "| [+] Creating directory %s\n" "${dir}"
		sudo -u "${username}" mkdir -p "${dir}"
	done
	printf "%s\n" "${delimiter}"

	printf "%s\n" "${delimiter}"
	printf "| [+] Directories for user %s created\n" "${username}"
	printf "%s\n" "${delimiter}"
}

cloneDotfiles() {
	# Clone dotfiles from my git repo
	cd "${root_dir}/Documents/git/"
	printf "%s\n" "${delimiter}"
	printf "| [+] Cloning dotfiles\n"
	printf "%s\n" "${delimiter}"

	git clone https://github.com/KostasEreksonas/dotfiles.git
}

installPackages() {
	# Install packages
	printf "%s\n" "${delimiter}"
	printf "| [+] Installing packages\n"
	printf "%s\n" "${delimiter}"
	cd "${root_dir}/Documents/git/dotfiles/package_lists/"
	while read line; do
		pacman --noconfirm -S - < "${line}"
	done < <(find . -type f -name "*.txt" -exec basename {} \;)
}

installYAY() {
	# Install yay aur manager
	# Edit MAKEFLAGS to use all available threads for compiling AUR packages
	sed -i 's/#MAKEFLAGS="-j2"/MAKEFLAGS="-j$(nproc)"/' /etc/makepkg.conf
	cd "${root_dir}/Documents/aur/"
	git clone https://aur.archlinux.org/yay.git
	cd "yay/"
	makepkg -si
}

installAUR() {
	# Install AUR packages
	printf "%s\n" "${delimiter}"
	printf "| [+] Installing packages\n"
	printf "%s\n" "${delimiter}"
	cd "${root_dir}/Documents/git/dotfiles/package_lists/aur"
	printf "%s\n" "${delimiter}"
	while read line; do
		printf "| [+] Installing %s\n" "${line}"
		sudo -u "${username}" yay -S "${line}"
	done < <(find . -type f -name "*.txt" -exec basename {} \;)
	printf "%s\n" "${delimiter}"
}

#  ------
# | Main |
#  ------

# Install dependencies
installDependencies

# Create an user
createUser

# Change to the new home directory
root_dir="/home/${username}"
cd "${root_dir}"

# Create directories
createDirectories

# Clone dotfiles
cloneDotfiles

# Install packages
installPackages

# Install YAY
installYAY

# Install AUR packages
installAUR
