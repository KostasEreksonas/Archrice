#!/bin/sh

function place_screens() {
	dialog --title "Screen Configuration" --yes-label "Right-of" --no-label "Left-of" --yesno "Where do you want to put your secondary screen?" 0 0 3>&1 1>&2 2>&3
	return $?
}

# Detect connected displays
displays=$(xrandr | grep -w connected | cut -d " " -f 1)

# Split found values to an array
bak=$IFS
IFS=$'\n'
displays=($displays)
IFS=$bak

# Get index numbers for detected displays
declare -a num
display_count=${#displays[@]}
count=1
for (( i=0; i<$display_count; i++ )); do
	num+=("$count")
	((count++))
done

# Create a numbered list of detected displays
for (( i=0; i<$display_count; i++ )); do
	list+=("${num[$i]}" "${displays[$i]}")
done

# Define dialog exit codes
: {OK=0}
: {CANCEL=1}
: {ESC=255}

# Create a dialog menu for configuring displays
while true; do
	exec 3>&1
	selection=$(dialog --title "Detected displays" --clear --menu "Which display should be set as primary?" 0 0 4 "${list[@]}" 2>&1 1>&3)
	exit_status=$?
	exec 3>&-
	case $exit_status in
		$CANCEL)
			clear
			echo "Program terminated."
			exit
			;;
		$ESC)
			clear
			echo "Program aborted." >&2
			exit 1
			;;
	esac
	sideof=''
	case $selection in
		1)
			primary=${displays[0]}
			secondary=${displays[1]}
			$(place_screens)
			if [ $? == 0 ]; then
				sideof="--right-of"
			else
				sideof="--left-of"
			fi
			;;
		2)
			primary=${displays[1]}
			secondary=${displays[0]}
			$(place_screens)
			if [ $? == 0 ]; then
				sideof="--right-of"
			else
				sideof="--left-of"
			fi
			;;
	esac
	break
done

# Create a command for display extension and put it a the top of .xprofile
sed -i '2s/^/\n# Extend displays on WM startup\n/' ~/.xprofile
sed -i '4s/^/xrandr --output '$primary' --auto --output '$secondary' '$sideof' '$primary' --auto\n/' ~/.xprofile
